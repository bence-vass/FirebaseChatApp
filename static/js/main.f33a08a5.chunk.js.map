{"version":3,"sources":["Home.js","reducer.js","config.js","utils/firebaseFunctions.js","pages/SignUp.js","pages/SignIn.js","components/MessageComponent.js","pages/Chat.js","urlPaths.js","pages/UserList.js","utils/permissionHOC.js","pages/AdminDashboard.js","components/Navbar.js","App.js","store.js","serviceWorker.js","index.js"],"names":["Home","Component","compose","rootReducer","combineReducers","firebase","firebaseReducer","firestore","firestoreReducer","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","rrfConfig","userProfile","enableLogging","signUpWithEmail","email","password","a","createUser","creationDate","Date","signInWithEmail","login","sendMessage","message","senderId","receiverId","push","text","date_created","user","sendVipMessage","database","ref","once","snapshot","forEach","childSnapshot","console","log","key","assignUser","userId","role","update","SignUp","props","state","error","handleSubmit","bind","event","preventDefault","this","setState","then","res","history","catch","err","onSubmit","htmlFor","type","id","value","onChange","e","target","withRouter","withFirestore","SignIn","sentMessageStyle","margin","padding","color","backgroundColor","width","display","float","receivedMessageStyle","MessageComponent","currentUserId","style","children","Chat","scrollToBottom","messagesEnd","scrollIntoView","conversation","prevProps","prevState","sentMessages","receivedMessages","conv","Object","values","sort","b","auth","profile","isLoaded","isEmpty","to","height","overflowY","map","i","uid","cols","rows","onClick","match","params","connect","firebaseConnect","path","queryParams","storeAs","data","UserList","users","entries","CHAT_URL","withPermissionHoc","acceptedRoles","OriginalComponent","WithPermissionHoc","includes","AdminDashboard","moderators","length","Navbar","logout","store","window","__INITIAL_STATE__","initialState","middleware","thunk","withExtraArgument","getFirebase","applyMiddleware","devToolsExtension","__REDUX_DEVTOOLS_EXTENSION__","f","createStore","createStoreWithMiddleware","configureStore","App","config","dispatch","createFirestoreInstance","exact","initializeApp","fbConfig","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f33a08a5.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport {compose} from \"redux\";\n\n\nclass Home extends Component {\n    render() {\n\n        return (\n            <div>\n                <h1>Firebase Chat App</h1>\n\n\n            </div>\n        );\n    }\n}\n\n\nexport default compose(\n\n)(Home)\n","import { combineReducers } from 'redux'\nimport { firebaseReducer } from 'react-redux-firebase'\nimport { firestoreReducer } from 'redux-firestore'\n\nconst rootReducer = combineReducers({\n  firebase: firebaseReducer,\n  firestore: firestoreReducer\n})\n\nexport default rootReducer\n","export const firebase = {\n  apiKey: \"AIzaSyBebByNPbbIq64-sG0GjggS94k_VYcU5AA\",\n  authDomain: \"fir-chat-80ffa.firebaseapp.com\",\n  databaseURL: \"https://fir-chat-80ffa.firebaseio.com\",\n  projectId: \"fir-chat-80ffa\",\n  storageBucket: \"fir-chat-80ffa.appspot.com\",\n  messagingSenderId: \"296464418613\",\n  appId: \"1:296464418613:web:418b48f378c3d2d29bae7c\",\n  measurementId: \"G-G64YLWBLCP\"\n}\n\nexport const rrfConfig = {\n  userProfile: 'users',\n  //useFirestoreForProfile: true,\n  enableLogging: false\n}\n\nexport default { firebase, rrfConfig }\n","export async function signUpWithEmail(firebase, email, password) {\n    return await firebase.createUser({\n        email: email, password: password\n    }, {\n        email: email,\n        creationDate: Date(),\n    })\n}\n\nexport async function signInWithEmail(firebase, email, password) {\n    return await firebase.login({\n        email: email, password: password\n    })\n}\n\nexport async function sendMessage(firebase, message, senderId, receiverId) {\n    return await firebase.push('users/'+receiverId+'/chats', {\n        text: message,\n        date_created: Date(),\n        user: senderId,\n    })\n}\n\nexport async function sendVipMessage(firebase, message, senderId) {\n    let users = firebase.database().ref('users')\n    users.once('value', snapshot=>{\n        snapshot.forEach(childSnapshot=>{\n            console.log(childSnapshot.key)\n            firebase.push('users/'+childSnapshot.key+'/chats', {\n                text: message,\n                date_created: Date(),\n                user: senderId,\n            })\n\n        })\n    })\n\n}\n\nexport async function assignUser(firebase, userId, role=null){\n   return await firebase.database().ref('users/'+userId).update({\n       role: role\n   })\n}\n\n","import React, {Component} from 'react';\nimport {compose} from \"redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {withFirestore} from \"react-redux-firebase\";\nimport {signUpWithEmail} from \"../utils/firebaseFunctions\";\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: 'test@test.com',\n            password: 'Password123',\n            error: ''\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        this.setState({error: ''})\n\n        await signUpWithEmail(\n            this.props.firebase,\n            this.state.email,\n            this.state.password,\n        ).then(res => {\n            this.props.history.push('/')\n        }).catch(err => {\n\n            this.setState({error: err})\n        })\n\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h1>Sign Up</h1>\n                <form onSubmit={this.handleSubmit}>\n\n                    <label htmlFor={\"email\"}>Email address:</label>\n                    <input type=\"email\" id={'email'}\n                           value={this.state.email}\n                           onChange={e => {\n                               this.setState({email: e.target.value})\n                           }}\n                    />\n                    <br/>\n\n                    <label htmlFor={\"password\"}>Password:</label>\n                    <input type=\"password\" id={'password'}\n                           value={this.state.password}\n                           onChange={e => {\n                               this.setState({password: e.target.value})\n                           }}\n                    />\n                    <br/>\n\n                    <input type=\"submit\" value=\"Sign up\"/>\n\n                    {this.state.error ?\n                        <div>{this.state.error.message}</div>\n                        :\n                        null\n                    }\n\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default compose(\n    withRouter,\n    withFirestore,\n)(SignUp)","import React, {Component} from 'react';\nimport {signInWithEmail} from \"../utils/firebaseFunctions\";\nimport {compose} from \"redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {withFirestore} from \"react-redux-firebase\";\n\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: 'test@test.com',\n            password: 'Password123',\n            error: '',\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        this.setState({error: ''})\n\n        await signInWithEmail(\n            this.props.firebase,\n            this.state.email,\n            this.state.password,\n        ).then(res => {\n            this.props.history.push('/')\n\n        }).catch(err => {\n            this.setState({error: err})\n        })\n\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h1>Sign In</h1>\n                <form onSubmit={this.handleSubmit}>\n\n                    <label htmlFor={\"email\"}>Email address:</label>\n                    <input type=\"email\" id={'email'}\n                           value={this.state.email}\n                           onChange={e => {\n                               this.setState({email: e.target.value})\n                           }}\n                    />\n                    <br/>\n\n                    <label htmlFor={\"password\"}>Password:</label>\n                    <input type=\"password\" id={'password'}\n                           value={this.state.password}\n                           onChange={e => {\n                               this.setState({password: e.target.value})\n                           }}\n                    />\n                    <br/>\n\n                    <input type=\"submit\" value=\"Sign In\"/>\n\n                    {this.state.error ?\n                        <div>{this.state.error.message}</div>\n                        :\n                        null\n                    }\n\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default compose(\n    withRouter,\n    withFirestore,\n)(SignIn)","import React, {Component} from 'react';\n\n\nconst sentMessageStyle = {\n    margin: '1rem',\n    padding: '1rem',\n    color: '#ffffff',\n    backgroundColor: '#4287f5',\n    width: '60%',\n    display: 'block',\n    float: 'right',\n\n}\n\nconst receivedMessageStyle = {\n    margin: '1rem',\n    padding: '1rem',\n    color: '#343434',\n    backgroundColor: '#e9e6d2',\n    width: '60%',\n    float: 'left',\n    display: 'block',\n\n\n}\n\nclass MessageComponent extends Component {\n    render() {\n        if(this.props.currentUserId === this.props.senderId){\n            return (\n                <div style={sentMessageStyle}>\n                    {this.props.children}\n                </div>\n            );\n        } else {\n            return (\n                <div style={receivedMessageStyle}>\n                    {this.props.children}\n                </div>\n            );\n        }\n\n    }\n}\n\nexport default MessageComponent;","import React, {Component} from 'react';\nimport {compose} from \"redux\";\nimport {withRouter, Redirect} from \"react-router-dom\";\nimport {isEmpty, isLoaded, firebaseConnect} from \"react-redux-firebase\";\nimport {connect} from \"react-redux\";\nimport {SIGN_IN_URL} from \"../urlPaths\";\nimport {sendMessage, sendVipMessage} from \"../utils/firebaseFunctions\";\nimport MessageComponent from \"../components/MessageComponent\";\n\n\nclass Chat extends Component {\n    constructor() {\n        super();\n        this.state = {\n            message: '',\n            conversation: [],\n        }\n    }\n\n    scrollToBottom = () => {\n        this.messagesEnd.scrollIntoView();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.sentMessages && this.props.receivedMessages) {\n            if (\n                this.props.sentMessages !== prevProps.sentMessages ||\n                this.props.receivedMessages !== prevProps.receivedMessages\n            ) {\n                let conv = [...Object.values(this.props.sentMessages), ...Object.values(this.props.receivedMessages)]\n                    .sort((a, b) => new Date(a.date_created) - new Date(b.date_created))\n                this.setState({conversation: conv})\n            }\n        }\n        this.scrollToBottom();\n    }\n\n    render() {\n        const {auth, profile} = this.props\n        if (isLoaded(auth)) {\n            if (isEmpty(auth)) {\n                return <Redirect to={SIGN_IN_URL}/>\n            } else {\n                return (\n                    <div>\n                        <h1>Chat</h1>\n                        <div style={{\n                            height: '50vh',\n                            overflowY: 'auto',\n                        }}>\n                            {this.state.conversation ?\n                                <div>\n                                    {this.state.conversation.map((e, i) => {\n                                        return (\n                                            <MessageComponent key={i} currentUserId={auth.uid} senderId={e.user}>\n                                                {e.text}\n                                            </MessageComponent>\n                                        )\n                                    })}\n                                    <div style={{float: 'right'}} ref={e => this.messagesEnd = e}></div>\n                                </div>\n                                :\n                                <div>Write a message first</div>\n                            }\n                        </div>\n\n                        <div>\n                             <textarea id={\"message\"} cols=\"30\" rows=\"10\"\n                                       value={this.state.message}\n                                       onChange={e => {\n                                           this.setState({message: e.target.value})\n                                       }}\n                             />\n                            <button onClick={async () => {\n                                await sendMessage(\n                                    this.props.firebase,\n                                    this.state.message,\n                                    auth.uid,\n                                    this.props.match.params.userId\n                                )\n                                await this.setState({message: ''})\n                            }}>Send\n                            </button>\n\n\n                            {profile.role === 'admin' ?\n                                <button onClick={async () => {\n                                    await sendVipMessage(\n                                        this.props.firebase,\n                                        this.state.message,\n                                        auth.uid,\n                                    )\n                                    await this.setState({message: ''})\n                                }}>Send VIP\n                                </button>\n                                :\n                                null\n                            }\n\n\n                        </div>\n\n                    </div>\n                );\n            }\n        } else {\n            return <div>Loading...</div>\n        }\n\n    }\n}\n\nexport default compose(\n    withRouter,\n    connect(\n        ({firebase: {auth, profile}}) => ({\n            auth,\n            profile\n        })),\n    firebaseConnect(props => {\n        return [\n            {\n                path: 'users/' + props.match.params.userId + '/chats',\n                queryParams: [\n                    'orderByChild=user',\n                    `equalTo=${props.auth.uid}`\n                ],\n                storeAs: 'sentMessages'\n            },\n            {\n                path: 'users/' + props.auth.uid + '/chats',\n                queryParams: [\n                    'orderByChild=user',\n                    `equalTo=${props.match.params.userId}`\n\n                ],\n                storeAs: 'receivedMessages'\n            }\n        ]\n\n    }),\n    connect((state) => ({\n        sentMessages: state.firebase.data.sentMessages,\n        receivedMessages: state.firebase.data.receivedMessages,\n    }))\n)(Chat)\n","export const SIGN_UP_URL = '/signup'\nexport const SIGN_IN_URL = '/signin'\nexport const CHAT_URL = '/chat'\nexport const USERS_URL = '/users'\nexport const ADMIN_DASHBOARD_URL = '/dashboard'","import React, {Component} from 'react';\nimport {withRouter, Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {firebaseConnect, isLoaded} from \"react-redux-firebase\";\nimport {compose} from \"redux\";\nimport {CHAT_URL} from \"../urlPaths\";\n\nclass UserList extends Component {\n    render() {\n        const {users} = this.props\n        if (isLoaded(users)) {\n            return (\n                <div>\n                    <ul>\n                        {Object.entries(users).map((e, i) => {\n                            if (e[0] === this.props.auth.uid) {\n                                return null\n                            } else {\n                                return (\n                                    <Link to={CHAT_URL + '/' + e[0]} key={i}>\n                                        <li>\n                                            user:\n                                            {e[1].email}\n                                        </li>\n                                    </Link>\n                                )\n                            }\n                        })}\n\n                    </ul>\n                </div>\n            );\n        } else {\n            return <div>Loading...</div>\n        }\n\n    }\n}\n\nexport default compose(\n    withRouter,\n    connect(\n        ({firebase: {auth, profile}}) => ({\n            auth,\n            profile\n        })),\n    firebaseConnect([\n        {\n            path: 'users',\n            storeAs: 'users'\n        }\n    ]),\n    connect((state,) => ({\n        users: state.firebase.data.users\n    }))\n)(UserList)","import React, {Component} from 'react';\nimport {withRouter, Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {isLoaded, isEmpty} from \"react-redux-firebase\";\n\nconst withPermissionHoc = (acceptedRoles=['admin', ]) => (OriginalComponent) => {\n    class WithPermissionHoc extends Component {\n        render() {\n            if (isLoaded(this.props.profile)) {\n                if (!isEmpty(this.props.profile)){\n                    if (acceptedRoles.includes(this.props.profile.role)) {\n                        return <OriginalComponent {...this.props}/>\n                    }\n                }\n                console.log('You do not have permission!')\n                return <Redirect to={'/'}/>\n            } else {\n                return <div>Loading...(HOC)</div>\n            }\n        }\n    }\n\n    return compose(\n        withRouter,\n        connect(\n            ({firebase: {auth, profile}}) => ({\n                auth,\n                profile\n            })),\n        )(WithPermissionHoc)\n}\n\nexport default withPermissionHoc;","import React, {Component} from 'react';\nimport {compose} from \"redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {firebaseConnect, isLoaded} from \"react-redux-firebase\";\nimport {assignUser} from \"../utils/firebaseFunctions\";\nimport withPermissionHoc from \"../utils/permissionHOC\";\n\nclass AdminDashboard extends Component {\n    render() {\n        console.log(this.props)\n        if (isLoaded(this.props.users) && isLoaded(this.props.moderators)) {\n            return (\n                <div>\n                    <h1>Admin Dashboard</h1>\n                    <h1>Moderators</h1>\n                    <ul>\n                        {this.props.moderators && this.props.moderators.length !== 0 ?\n                            Object.entries(this.props.moderators).map((e, i) => {\n                                if (e[0] === this.props.auth.uid) {\n                                    return null\n                                } else {\n                                    return <li key={i}>\n                                        user:\n                                        {e[1].email}\n                                        <button onClick={async () => {\n                                            await assignUser(this.props.firebase, e[0])\n                                        }}>Set to User\n                                        </button>\n                                    </li>\n                                }\n                            })\n                            :\n                            <span>No moderators</span>\n                        }\n\n                    </ul>\n                    <h1>Users</h1>\n                    <ul>\n                        {this.props.users && this.props.users.length !== 0 ?\n                            Object.entries(this.props.users).map((e, i) => {\n                                if (e[0] === this.props.auth.uid) {\n                                    return null\n                                } else {\n                                    return <li key={i}>\n                                        user:\n                                        {e[1].email}\n                                        <button onClick={async () => {\n                                            await assignUser(this.props.firebase, e[0], 'moderator')\n                                        }}>Set to Moderator\n                                        </button>\n                                    </li>\n                                }\n                            })\n                            :\n                            <span>No users</span>\n                        }\n\n                    </ul>\n                </div>\n            );\n        } else {\n            return <div>Loading ...</div>\n        }\n\n    }\n}\n\n\nexport default compose(\n    withPermissionHoc(),\n    withRouter,\n    connect(\n        ({firebase: {auth, profile}}) => ({\n            auth,\n            profile\n        })),\n    firebaseConnect([\n        {\n            path: 'users',\n            queryParams: [\n                'orderByChild=role',\n                'equalTo=moderator'\n            ],\n            storeAs: 'moderators'\n        },\n        {\n            path: 'users',\n            queryParams: [\n                'orderByChild=role',\n                'equalTo=null'\n            ],\n            storeAs: 'users'\n        }\n    ]),\n    connect((state) => ({\n        moderators: state.firebase.data.moderators,\n        users: state.firebase.data.users,\n    }))\n)(AdminDashboard)","import React, {Component} from 'react';\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {isEmpty, isLoaded, withFirestore} from \"react-redux-firebase\";\nimport {Link} from \"react-router-dom\";\nimport {ADMIN_DASHBOARD_URL, CHAT_URL, SIGN_IN_URL, SIGN_UP_URL} from \"../urlPaths\";\n\nclass Navbar extends Component {\n    render() {\n        const {auth, profile} = this.props\n        return (\n            <div>\n                {isLoaded(auth) && isEmpty(auth) ?\n                    <div>\n                        <ul>\n                            <Link to={SIGN_UP_URL}>\n                                <li>Sign Up</li>\n                            </Link>\n                            <Link to={SIGN_IN_URL}>\n                                <li>Sign In</li>\n                            </Link>\n                        </ul>\n                    </div>\n\n                    :\n                    <div>\n                        <h3>Logged in: {auth.email}</h3>\n                        {profile.role ?\n                            <span>Role: {profile.role}</span>\n                            :\n                            null\n                        }\n                        <ul>\n                            <Link to={CHAT_URL}>\n                                <li>Chat</li>\n                            </Link>\n                            <Link to={ADMIN_DASHBOARD_URL}>\n                                <li>Dashboard</li>\n                            </Link>\n\n                            <li onClick={() => {\n                                this.props.firebase.logout()\n                            }}>Logout\n                            </li>\n                        </ul>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default compose(\n    withFirestore,\n    connect(\n        ({firebase: {auth, profile}}) => ({\n            auth,\n            profile\n        })),\n)(Navbar)","import React from 'react'\nimport { Provider } from 'react-redux'\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\nimport 'firebase/storage'\nimport 'firebase/firestore' // make sure you add this for firestore\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\nimport { createFirestoreInstance } from 'redux-firestore'\nimport Home from './Home'\nimport configureStore from './store'\nimport { firebase as fbConfig, rrfConfig } from './config'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport {ADMIN_DASHBOARD_URL, CHAT_URL, SIGN_IN_URL, SIGN_UP_URL,} from \"./urlPaths\";\n\nimport SignUp from \"./pages/SignUp\";\nimport SignIn from \"./pages/SignIn\";\nimport Chat from \"./pages/Chat\";\nimport UserList from \"./pages/UserList\";\nimport AdminDashboard from \"./pages/AdminDashboard\";\nimport Navbar from \"./components/Navbar\";\n\n\nconst initialState = window && window.__INITIAL_STATE__ // set initial state here\nconst store = configureStore(initialState)\n// Initialize Firebase instance\nfirebase.initializeApp(fbConfig)\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider\n        firebase={firebase}\n        config={rrfConfig}\n        dispatch={store.dispatch}\n        createFirestoreInstance={createFirestoreInstance}>\n          <Router>\n\n              <Navbar/>\n\n\n              <Switch>\n                  <Route exact path={SIGN_UP_URL}><SignUp/></Route>\n                  <Route exact path={SIGN_IN_URL}><SignIn/></Route>\n                  <Route exact path={CHAT_URL+'/:userId'}><Chat/></Route>\n                  <Route exact path={CHAT_URL}><UserList/></Route>\n                  <Route exact path={ADMIN_DASHBOARD_URL}><AdminDashboard/></Route>\n                  <Route path={'/'}><Home/></Route>\n              </Switch>\n          </Router>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  )\n}\n","import { applyMiddleware, createStore, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducer'\nimport { getFirebase } from 'react-redux-firebase'\n\nexport default function configureStore(initialState, history) {\n  const middleware = [thunk.withExtraArgument({ getFirebase })]\n  const createStoreWithMiddleware = compose(\n    applyMiddleware(...middleware),\n    typeof window === 'object' &&\n      typeof window.devToolsExtension !== 'undefined'\n      ? () => window.__REDUX_DEVTOOLS_EXTENSION__\n      : f => f\n  )(createStore)\n  const store = createStoreWithMiddleware(rootReducer)\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('./reducer', () => {\n      const nextRootReducer = require('./reducer')\n      store.replaceReducer(nextRootReducer)\n    })\n  }\n\n  return store\n}\n","/* eslint-disable no-undef, no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}